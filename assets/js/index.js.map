{"version":3,"file":"index.js","mappings":"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","sources":["webpack://custom-admin-color-options/./src/components/ColorOptionsApp.js","webpack://custom-admin-color-options/external window [\"wp\",\"apiFetch\"]","webpack://custom-admin-color-options/external window [\"wp\",\"components\"]","webpack://custom-admin-color-options/external window [\"wp\",\"element\"]","webpack://custom-admin-color-options/external window [\"wp\",\"i18n\"]","webpack://custom-admin-color-options/webpack/bootstrap","webpack://custom-admin-color-options/webpack/runtime/compat get default export","webpack://custom-admin-color-options/webpack/runtime/define property getters","webpack://custom-admin-color-options/webpack/runtime/hasOwnProperty shorthand","webpack://custom-admin-color-options/./src/index.js"],"sourcesContent":["// /src/components/ColorOptionsApp.js\nimport { useState, useEffect } from '@wordpress/element';\nimport { Button, PanelBody, PanelRow, ColorPalette, TextControl, IconButton, Notice } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst MAX_COLORS = 5;\nconst MAX_PALETTES = 10;\n\nconst ColorOptionsApp = () => {\n    const [palettes, setPalettes] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        // Load palettes from wp_options on component mount\n        apiFetch({ path: '/wp/v2/color-options' })\n            .then((data) => {\n                if (data && data.palettes) {\n                    setPalettes(data.palettes);\n                }\n            })\n            .catch((error) => console.error('Error loading palettes:', error));\n    }, []);\n\n    const addPalette = () => {\n        if (palettes.length < MAX_PALETTES) {\n            const newPalette = { id: Date.now(), name: '', colors: [] };\n            setPalettes([...palettes, newPalette]);\n        } else {\n            setMessage(__('Maximum of 10 palettes allowed.', 'custom-admin-color-options'));\n        }\n    };\n\n    const addColor = (paletteId) => {\n        setPalettes(\n            palettes.map(palette =>\n                palette.id === paletteId && palette.colors.length < MAX_COLORS\n                    ? { ...palette, colors: [...palette.colors, { id: Date.now(), name: '', color: '#000000' }] }\n                    : palette\n            )\n        );\n    };\n\n    const updatePaletteName = (paletteId, name) => {\n        setPalettes(palettes.map(palette => palette.id === paletteId ? { ...palette, name } : palette));\n    };\n\n    const updateColor = (paletteId, colorId, key, value) => {\n        setPalettes(palettes.map(palette => {\n            if (palette.id === paletteId) {\n                return {\n                    ...palette,\n                    colors: palette.colors.map(color => color.id === colorId ? { ...color, [key]: value } : color)\n                };\n            }\n            return palette;\n        }));\n    };\n\n    const removeColor = (paletteId, colorId) => {\n        setPalettes(\n            palettes.map(palette =>\n                palette.id === paletteId\n                    ? { ...palette, colors: palette.colors.filter(color => color.id !== colorId) }\n                    : palette\n            )\n        );\n    };\n\n    const removePalette = (paletteId) => {\n        setPalettes(palettes.filter(palette => palette.id !== paletteId));\n    };\n\n    const savePalettes = () => {\n        apiFetch({\n            path: '/wp/v2/color-options',\n            method: 'POST',\n            data: { palettes }\n        }).then(() => {\n            setMessage(__('Palettes saved successfully!', 'custom-admin-color-options'));\n        }).catch((error) => {\n            console.error('Error saving palettes:', error);\n            setMessage(__('Error saving palettes.', 'custom-admin-color-options'));\n        });\n    };\n\n    return (\n        <div className=\"color-options-app\">\n            <h2>{__('Manage Color Palettes', 'custom-admin-color-options')}</h2>\n            {message && <Notice status=\"info\" isDismissible>{message}</Notice>}\n            \n            {palettes.map((palette) => (\n                <PanelBody\n                    key={palette.id}\n                    title={palette.name || __('Untitled Palette', 'custom-admin-color-options')}\n                    initialOpen={true}\n                >\n                    <TextControl\n                        label={__('Palette Name', 'custom-admin-color-options')}\n                        value={palette.name}\n                        onChange={(value) => updatePaletteName(palette.id, value)}\n                        placeholder={__('Enter palette name...', 'custom-admin-color-options')}\n                    />\n\n                    {palette.colors.map((color) => (\n                        <PanelRow key={color.id} className=\"color-panel-row\">\n                            <TextControl\n                                label={__('Color Name', 'custom-admin-color-options')}\n                                value={color.name}\n                                onChange={(value) => updateColor(palette.id, color.id, 'name', value)}\n                                placeholder={__('Enter color name...', 'custom-admin-color-options')}\n                            />\n                            <ColorPalette\n                                value={color.color}\n                                onChange={(value) => updateColor(palette.id, color.id, 'color', value)}\n                                disableCustomColors={false}  // Allows custom colors\n                            />\n                            <IconButton\n                                icon=\"trash\"\n                                label={__('Remove Color', 'custom-admin-color-options')}\n                                onClick={() => removeColor(palette.id, color.id)}\n                                className=\"remove-color-btn\"\n                            />\n                        </PanelRow>\n                    ))}\n\n                    {palette.colors.length < MAX_COLORS && (\n                        <PanelRow>\n                            <Button isPrimary onClick={() => addColor(palette.id)}>\n                                {__('Add New Color', 'custom-admin-color-options')}\n                            </Button>\n                        </PanelRow>\n                    )}\n\n                    <PanelRow>\n                        <IconButton\n                            icon=\"trash\"\n                            label={__('Remove Palette', 'custom-admin-color-options')}\n                            onClick={() => removePalette(palette.id)}\n                            className=\"remove-palette-btn\"\n                        />\n                    </PanelRow>\n                </PanelBody>\n            ))}\n\n            <PanelRow>\n                <Button isPrimary onClick={addPalette}>\n                    {__('Add New Palette', 'custom-admin-color-options')}\n                </Button>\n            </PanelRow>\n\n            <PanelRow>\n                <Button isSecondary onClick={savePalettes}>\n                    {__('Save Palettes', 'custom-admin-color-options')}\n                </Button>\n            </PanelRow>\n        </div>\n    );\n};\n\nexport default ColorOptionsApp;\n","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// /src/index.js\nimport { render } from '@wordpress/element';\nimport ColorOptionsApp from './components/ColorOptionsApp';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const container = document.getElementById('bolt-color-options-app');\n    if (container) render(<ColorOptionsApp />, container);\n});\n"],"names":["ColorOptionsApp","palettes","setPalettes","useState","message","setMessage","useEffect","apiFetch","path","then","data","catch","error","console","updateColor","paletteId","colorId","key","value","map","palette","id","colors","color","React","createElement","className","__","Notice","status","isDismissible","PanelBody","title","name","initialOpen","TextControl","label","onChange","updatePaletteName","placeholder","PanelRow","ColorPalette","disableCustomColors","IconButton","icon","onClick","removeColor","filter","length","Button","isPrimary","addColor","Date","now","removePalette","addPalette","newPalette","isSecondary","savePalettes","method","module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","document","addEventListener","container","getElementById","render"],"sourceRoot":""}